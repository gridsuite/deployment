# Little hack with docker to replace unused embedding.conf to inject additionnal config
# https://github.com/swagger-api/swagger-ui/blob/master/docker/docker-entrypoint.d/40-swagger-ui.sh

# We add a proxy just to add the missing CORS headers to the servers reponse
location ~ ^/swagger/proxy-cors/([0-9]+)/?$ {
    set $dest_port $1;

    #[error] 0#0: *1 host.docker.internal could not be resolved (3: Host not found)
    # set DNS resolver as Docker internal DNS
    resolver 127.0.0.11 ipv6=off valid=10s;
    resolver_timeout 5s;

    # prevent dns caching and force nginx to make a dns lookup on each request.
    #set $target http://host.docker.internal:$dest_port/v3/api-docs;
    set $target http://172.17.0.1:$dest_port/v3/api-docs;
    #TODO: why the resolver not work?!

    # Prevent loop requests
    if ($dest_port = 80) { return 508; }
    if ($dest_port = 8080) { return 508; }
    if ($dest_port = 9080) { return 508; }

    # Proxy to the external JSON server
    # Build the proxy target dynamically based on the extracted port and path
    proxy_pass $target;
    #proxy_http_version 1.1;
    proxy_redirect off;

    # Additional proxy settings (if necessary)
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-Host $server_name;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;

    # Optionally handle timeouts or larger client requests
    client_max_body_size 10M;
    proxy_read_timeout 90;

    # Add CORS headers
    # Note: no need as we are include in a block that already add the headers
    # https://github.com/swagger-api/swagger-ui/blob/master/docker/default.conf.template

    # Handle preflight OPTIONS requests
    if ($request_method = OPTIONS) {
        return 204;  # No Content for preflight
    }
}
